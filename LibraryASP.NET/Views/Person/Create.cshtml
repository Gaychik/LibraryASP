@model LibraryASP.NET.Models.Person

@{
	ViewBag.Title = "Create";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/inputmask/inputmask.js"></script>
<script src="~/Scripts/inputmask/inputmask.extensions.js"></script>
<script src="~/Scripts/inputmask/inputmask.numeric.extensions.js"></script>
<script src="~/Scripts/inputmask/inputmask.date.extensions.js"></script>
<script src="~/Scripts/inputmask/jquery.inputmask.js"></script>
<h2>Create</h2>
@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>Person</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger"})
		<div class="form-group">
			@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", datacontent = "pastFullName" } })
				@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", datacontent = "pastFullName" } })
				@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.MidName, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.MidName, new { htmlAttributes = new { @class = "form-control", @datacontent="pastFullName" }})
				@Html.ValidationMessageFor(model => model.MidName, "", new { @class = "text-danger" })
			</div>
		</div>


		<div class="form-group">
			@Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.TelephoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.TelephoneNumber, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.TelephoneNumber, "", new { @class = "text-danger" })
			</div>
		</div>
				
		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Create" class="btn btn-default" />
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>
<script>
	var VALID;
	var selector = document.getElementById("TelephoneNumber");
	var im = new Inputmask("+7(999)999-99-99");
	im.mask(selector);
	var btn = $("input:submit").first();
	btn.on("click", function () {
    VALID = true;
	$("div.error").remove();
		let elementinput =$("input[datacontent='pastFullName']").get()
		for (let el of elementinput)
			if (el.value.length > 0 && /^[A-Za-z]+\s/i.test(el.value)) {
				$(el).after('<div class="error" style="margin-top:15px;"><font color="red">Invalid format,only letters are allowed!</font></div>').show()
				VALID = false;
			}	
		setTimeout(function () {
			$("div.error").remove();
		}, 5000);
		return VALID;
	});
</script>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}





